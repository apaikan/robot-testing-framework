#  RobotTestingFramework
#  Copyright: (C) 2015 iCub Facility, Istituto Italiano di Tecnologia
#  Authors: Daniele E. Domenichelli <daniele.domenichelli@iit.it>
#
#  Copy Policy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT
#

set(RTF_VERSION @RTF_VERSION@)

@PACKAGE_INIT@

set_and_check(RTF_INCLUDEDIR "@PACKAGE_RTF_INCLUDEDIR@")

if(NOT TARGET RTF::RTF)
  include("${CMAKE_CURRENT_LIST_DIR}/RTFTargets.cmake")
endif()

set(RTF_LIBRARIES RTF::RTF)
set(RTF_INCLUDE_DIRS "${RTF_INCLUDEDIR}")

if(TARGET RTF::RTF_dll)
  set(RTF_DLL_FOUND TRUE)
  set_and_check(RTF_DLL_INCLUDEDIR "@PACKAGE_RTF_DLL_INCLUDEDIR@")
  list(APPEND RTF_LIBRARIES RTF::RTF_dll)
  list(APPEND RTF_INCLUDE_DIRS "${RTF_DLL_INCLUDEDIR}")
else()
  set(RTF_DLL_FOUND FALSE)
endif()

if(TARGET RTF::RTF_lua)
  set(RTF_LUA_FOUND TRUE)
  set_and_check(RTF_LUA_INCLUDEDIR "@PACKAGE_RTF_LUA_INCLUDEDIR@")
  list(APPEND RTF_LIBRARIES RTF::RTF_lua)
  list(APPEND RTF_INCLUDE_DIRS "${RTF_LUA_INCLUDEDIR}")
else()
  set(RTF_LUA_FOUND FALSE)
endif()

if(TARGET RTF::RTF_python)
  set(RTF_PYTHON_FOUND TRUE)
  set_and_check(RTF_PYTHON_INCLUDEDIR "@PACKAGE_RTF_PYTHON_INCLUDEDIR@")
  list(APPEND RTF_LIBRARIES RTF::RTF_python)
  list(APPEND RTF_INCLUDE_DIRS "${RTF_PYTHON_INCLUDEDIR}")
else()
  set(RTF_PYTHON_FOUND FALSE)
endif()

if(TARGET RTF::RTF_ruby)
  set(RTF_RUBY_FOUND TRUE)
  set_and_check(RTF_RUBY_INCLUDEDIR "@PACKAGE_RTF_RUBY_INCLUDEDIR@")
  list(APPEND RTF_LIBRARIES RTF::RTF_ruby)
  list(APPEND RTF_INCLUDE_DIRS "${RTF_RUBY_INCLUDEDIR}")
else()
  set(RTF_RUBY_FOUND FALSE)
endif()

check_required_components(RTF)

################################################################################
#.rst:
# .. command:: rtf_add_plugin
#
# Declare a plugin::
#
#   rtf_add_plugin(<plugin name>
#                       OUTPUT_NAME <output_name>
#                       srcs
#                       hdrs)
#
# This macro converts a plugin declaration to code, and to set up a CMake option
# for enabling or disabling the compilation of that plugin.
#
# The ``OUTPUT_NAME`` is the base name for output files created for the library target.

macro(RTF_ADD_PLUGIN _library_name)

  set(_options)
  set(_oneValueArgs OUTPUT_NAME)
  set(_multiValueArgs)
  cmake_parse_arguments(_RAP "${_options}" "${_oneValueArgs}" "${_multiValueArgs}" ${ARGN} )

  add_library(${_library_name} MODULE ${_RAP_UNPARSED_ARGUMENTS})
  target_link_libraries(${_library_name} RTF::RTF
                                         RTF::RTF_dll)
  set_property(TARGET ${_library_name} PROPERTY PREFIX "")
  if(DEFINED _RAP_OUTPUT_NAME)
    set_property(TARGET ${_library_name} PROPERTY OUTPUT_NAME ${_RAP_OUTPUT_NAME})
  endif()
endmacro()
